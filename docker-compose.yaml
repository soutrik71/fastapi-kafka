version: "3.9"
services:
  postgres:
    image: postgres:15-alpine # Use a specific and lightweight version
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432" # Host:Container port mapping
    volumes:
      - postgres_data:/var/lib/postgresql/data # Use named volume for portability
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped # Ensure it restarts on failures
    networks:
      - app_network

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis_stack
    ports:
      - "6379:6379" # Redis service
      - "8001:8001" # Redis Stack UI
    environment:
      REDIS_ARGS: "--save 60 1 --loglevel warning"
    volumes:
      - redis_data:/data # Named volume for Redis persistence
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped # Ensure it restarts on failures
    networks:
      - app_network

volumes:
  postgres_data: # Named volume for PostgreSQL
  redis_data:    # Named volume for Redis

networks:
  app_network: # Shared network for inter-service communication
    driver: bridge
